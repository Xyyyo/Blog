# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2
jobs:
  build:
    docker:
      # Specify the version you desire here
      - image: circleci/php:7.3-stretch-node-browsers
      - image: circleci/mysql:5.7
        environment:
          - MYSQL_USER=root
          - MYSQL_PASSWORD=
          - MYSQL_ALLOW_EMPTY_PASSWORD=true
          - MYSQL_DATABASE=circle_test

    steps:
      # - checkout
      - run:
          name: Install PHP extensions
          command: sudo docker-php-ext-install pdo_mysql
      - run:
          name: Install Composer
          command: "curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin --filename=composer"
      - run:
          name: Display versions
          command: |
            php -v
            composer --version

      - checkout

      # composer cache

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.lock" }}
            - v1-dependencies-
      - run: cp .env.example .env
      - run: composer install -n --prefer-dist
      - save_cache:
          key: composer-v1-{{ checksum "composer.lock" }}
          paths:
            - vendor

      # node cache

      - restore_cache:
          keys:
            - node-v4-{{ checksum "package.json" }}
            - node-v4-
      - run: npm install
      - save_cache:
          key: node-v4-{{ checksum "package.json" }}
          paths:
            - node_modules
            - ~/.yarn

      # prepare the database
      - run: php artisan migrate --env=testing --force

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
      # this example uses codecept but you're not limited to it
      - run: ./vendor/bin/codecept build
      - run: ./vendor/bin/codecept run --xml result.xml
      - store_test_results:
          path: tests/_output
      - store_artifacts:
          path: tests/_output
